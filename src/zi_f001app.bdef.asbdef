managed implementation in class zbp_i_f001app unique;
strict ( 2 );
with draft;

define behavior for ZI_F001APP alias App
with unmanaged save with full data
draft table zdf001app
etag master Uname
lock master
total etag Uname
authorization master ( global )
{
  internal create;
  internal delete;
  update ( precheck );
  field ( readonly ) Uname;
  field ( mandatory ) Plant;
  association _Materials { create; with draft; }
  association _Output { internal create; with draft; }
  action ( features : instance ) uploadFile  result [1] $self;
  action ( features : instance ) extractData  result [1] $self;
  action ( features : instance ) validateEntries  result [1] $self;
  action ( features : instance ) clearInput  result [1] $self;

  draft action Edit;
  draft action Activate optimized;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare
  {
    validation Output~validateNewPrice;
    validation Output~validateNewQuantity;
  }

  side effects
  {
    action extractData affects entity _Output;
  }
}

define behavior for ZI_F001MATRANGE alias Materials
persistent table zf001matrange
draft table zdf001matrange
lock dependent by _App
authorization dependent by _App
etag master Uname
{
  update;
  delete;
  field ( readonly ) Uname, Paramid;
  field ( numbering : managed ) Paramid;
  association _App { with draft; }
  mapping for zf001matrange
    {
      uname              = uname;
      Paramid            = paramid;
      MatnrFrom          = matnr_from;
      MatnrTo            = matnr_to;
      CreatedBy          = created_by;
      CreatedAt          = created_at;
      locallastchangedby = local_last_changed_by;
      locallastchangedat = local_last_changed_at;
      lastchangedat      = last_changed_at;
    }
}

define behavior for zi_f001output alias Output
with unmanaged save with full data
//persistent table zf001out
draft table zdf001out
lock dependent by _App
authorization dependent by _App
etag master Uname
{
  update;
  internal delete;
  field ( readonly ) Uname, Sequence, Plant, Material, SoldToParty, Startdate, EndDate, Price, Quantity, Message;
  association _App { with draft; }
  validation validateNewPrice on save { create; field NewPrice; }
  validation validateNewQuantity on save { create; field NewQuantity; }
//  action ( features : instance ) validateEntries  result [1..*] $self;
}